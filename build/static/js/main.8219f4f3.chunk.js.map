{"version":3,"sources":["components/Filter.js","services/persons.js","components/PersonForm.js","components/Person.js","components/Notification.js","App.js","index.js"],"names":["Filter","_ref","filterPersons","handleFilterChange","react_default","a","createElement","value","onChange","baseUrl","services_persons","axios","get","then","response","data","newObject","post","id","put","concat","delete","PersonForm","persons","setPersons","setNewName","setNewNumber","newName","handleNameChange","newNumber","handleNumberChange","setNotificationMessage","setNotificationType","onSubmit","event","preventDefault","personObject","name","number","dupid","arr","i","length","isDuplicate","window","confirm","personService","console","log","map","person","setTimeout","catch","error","filter","p","type","Persons","Person","_ref2","onClick","removePerson","str","target","personid","Number","replace","personsToShow","toLowerCase","includes","key","Notification","message","className","App","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","setFilterPersons","_useState9","_useState10","notificationMessage","_useState11","_useState12","notificationType","useEffect","initialPersons","components_Notification","components_Filter","components_PersonForm","components_Person","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8219f4f3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({ filterPersons, handleFilterChange }) => {\r\n    return (\r\n        <div>\r\n            filter shown with <input value={filterPersons} onChange={handleFilterChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react';\r\nimport personService from './../services/persons'\r\n\r\nconst isDuplicate = (arr, name) => {\r\n    for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i].name === name) {\r\n            return arr[i].id\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nconst PersonForm = ({ persons, setPersons, setNewName, setNewNumber,\r\n    newName, handleNameChange, newNumber, handleNumberChange, \r\n    setNotificationMessage, setNotificationType }) => {\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n\r\n        const personObject = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n\r\n        const dupid = isDuplicate(persons, newName)\r\n        if (dupid !== false) {\r\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n                personService\r\n                    .update(dupid, personObject)\r\n                    .then(data => {\r\n                        console.log(data)\r\n                        setPersons(persons.map(person => person.id !== dupid ? person : data))\r\n                        setNewName('')\r\n                        setNewNumber('')\r\n                        setNotificationType('notification')\r\n                        setNotificationMessage(\r\n                            `Updated ${data.name}`\r\n                        )\r\n                        setTimeout(() => {\r\n                            setNotificationMessage(null)\r\n                        }, 5000)\r\n                    })\r\n                    .catch(error => {\r\n                        setNotificationType('error')\r\n                        setNotificationMessage(\r\n                            `Information of ${newName} has already been removed from server`\r\n                        )\r\n                        setPersons(persons.filter(p => p.id !== dupid))\r\n                        setTimeout(() => {\r\n                            setNotificationMessage(null)\r\n                        }, 5000)\r\n                    })\r\n            }\r\n        } else {\r\n            personService\r\n                .create(personObject)\r\n                .then(data => {\r\n                    console.log(data)\r\n                    setPersons(persons.concat(data))\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                    setNotificationType('notification')\r\n                    setNotificationMessage(\r\n                        `Added ${data.name}`\r\n                    )\r\n                    setTimeout(() => {\r\n                        setNotificationMessage(null)\r\n                    }, 5000)\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange={handleNumberChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react';\r\nimport personService from './../services/persons'\r\n\r\nconst Persons = ({ persons, setPersons, filterPersons }) => {\r\n\r\n    const isEmpty = (str) => str.length === 0\r\n\r\n    const Person = ({ person }) => <p>{person.name} {person.number} <button value={[person.id, person.name]} onClick={removePerson}>delete</button></p>\r\n    \r\n    const removePerson = (event) => {\r\n        event.preventDefault()\r\n\r\n        const str = event.target.value //why can't this be an array :(\r\n        const personid = Number(str.replace(/,.+/, '')) //regex to the rescue\r\n        const name = str.replace(/.+(?=,),/, '')\r\n        // could also have used const person = persons.find(p => p.id === id)\r\n\r\n        if (window.confirm(`Delete  ${name} ?`)) {         \r\n        personService\r\n            .remove(personid)\r\n            .then(data => {\r\n                console.log(data)\r\n                // const array = [...persons]\r\n                // array.splice(personid-1, 1)\r\n                // setPersons(array)\r\n                // filter is by far better:\r\n                setPersons(persons.filter(p => p.id !== personid))\r\n\r\n            })\r\n    }    \r\n}\r\n\r\n    const personsToShow = isEmpty(filterPersons)\r\n        ? persons\r\n        : persons.filter(person => person.name.toLowerCase().includes(filterPersons.toLowerCase()))\r\n\r\n    const rows = () => personsToShow.map(person =>\r\n        <Person\r\n            key={person.id}\r\n            person={person}\r\n        />\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            {rows()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={type}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification ","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Person';\nimport personService from './services/persons' \nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterPersons, setFilterPersons] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [notificationType, setNotificationType] = useState(null)\n\n  const hook = () => {\n    personService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n  }\n  // First parameter = the effect itself\n  // Second - an empty array [] = the effect is only run along with the first render of the component\n  useEffect(hook, []) \n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setFilterPersons(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={notificationMessage} type={notificationType} />\n\n      <Filter filterPersons={filterPersons} handleFilterChange={handleFilterChange} />\n\n      <h3>Add a new</h3>\n\n      <PersonForm persons={persons} \n        setPersons={setPersons} setNewName={setNewName} setNewNumber={setNewNumber}\n        newName={newName} handleNameChange={handleNameChange}\n        newNumber={newNumber} handleNumberChange={handleNumberChange} \n        setNotificationMessage={setNotificationMessage} setNotificationType={setNotificationType}\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons persons={persons} setPersons={setPersons} filterPersons={filterPersons} />\n      \n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}